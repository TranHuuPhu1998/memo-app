{"version":3,"sources":["constants/Config.js","utils/apiCaller.js","page/LoginPage/LoginPage.js","actions/index.js","constants/ActionTypes.js","components/Header/Header.js","components/NewCategory/NewCategory.js","components/BodyNavCreateNew/BodyNavCreate.js","components/BodyNavCreateTitle/BodyNavCreateTitle.js","containers/PaginationContainer/index.js","components/MemoContent/styles.js","components/MemoContent/MemoNew.js","components/MemoContent/MemoContent.js","components/Welcome/welcome.js","routes/routesHomePage.js","components/PaintBrushSolid/PaintBrushSolid.js","components/LanguagePage/Language.js","components/TestLoader/TestLoader.js","page/HomePage/HomePage.js","page/RegistrationPage/RegistrationPage.js","routes/routesAllPage.js","App.js","registerServiceWorker.js","reducers/ReducerFetchAllData.js","reducers/ReducerGetIdOnClick.js","reducers/ReducerDataSavetam.js","reducers/ReducerEditNote.js","reducers/ReducerSortTitle.js","reducers/ReducerShowAll.js","reducers/ReducerUserLogin.js","reducers/ReducerSetColorPage.js","reducers/ReducerLocale.js","reducers/ReducerHistoryDelete.js","reducers/ReducerAddCategory.js","reducers/ReducerGetCategory.js","reducers/ReducerUiNewCategory.js","reducers/index.js","i18n/locales/locales/index.js","i18n/ConnectedIntlProvider.js","index.js","components/BodyNavCreateTitle/url_handler.js"],"names":["API_URL","callAPI","endpoint","method","arguments","length","undefined","body","token","document","cookie","split","find","n","includes","axios","url","concat","Config","data","headers","authorization","accept","then","catch","err","console","log","Promise","res","rej","LoginPage_LoginPage","props","_useState","useState","setLoad","Object","slicedToArray","_useState3","_useState4","username","setUsername","_useState5","_useState6","password","setPassword","_useState7","_useState8","isRedirect","setIsRedirect","useEffect","CallAPI","doc","react_default","a","createElement","react_router","to","className","data-tilt","src","alt","data-validate","type","name","placeholder","onChange","e","currentTarget","value","aria-hidden","onClick","preventDefault","post","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","onSubmit","react_router_dom","actAddNodeMemoRequest","dataAdd","date_rs","moment","categoryDate","format","dispatch","callApi","actAddNodeMemo","actDeleteNode","id","actUpdateNode","actNewCategoryUI","payload","actGetCategoryRequest","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","EditMemo","idClick","datas","rs","forEach","element","_id","onEditMemo","SaveMemo","locale","mtil","mtil2","Date","onUpdate","success","onAddMemo","ClipMemo","_this$props","clip","onCLipMemo","checkClipColor","Clear","categoryName","contentMemo","titleMemo","event","target","setState","defineProperty","onSearch","state","keyword","onDelete","_this$props2","historyDelete","Delete","info","statusclip","_this2","color","Tooltip","title","index_es","defaultMessage","x","style","backgroundColor","Component","connect","dataSavetamp","fetchAllDataMemo","getActiveMemo","dataEdit","actEditNode","actDeleteNodeRequest","actUpdateNodeRequest","dataClip","dataclip","acthistoryDeleteRequest","NewCategory","context","handleClose","NewCategoryUI","onSaveCategory","CloseAndSava","category","open","categoryuinew","Fragment","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","label","variant","DialogActions","Button","actNewCategoryRequest","BodyNavCreate","useDispatch","_useState2","statusAll","setStatusAll","status","setStatus","statusClip","setstatusClip","useSelector","categoryget","showCategoryClick","item","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","fetchData","onShowAllClip","onOpenAndCloseClip","componentNewCategory","components_NewCategory_NewCategory","onOpenAndCloseAll","onOpenAndClose","push","set","Set","toConsumableArray","setCategory","index","key","count","countCategory","showCategory","countClip","actShowHistoryMemo","BodyNavCreateTitle","onClickSort","sortby","onSort","sort","onpageshow","number","page","history","paginate","createUrl","renderPage","pageNumbers","totalPage","showallnote","currentPage","statusHistory","disabled","map","showTitleContent","_this$props3","posts","b","getTime","statusSearch","filter","task","toLowerCase","indexOf","statusShowALl","statusCategory","nameCategory","width","textDecoration","onClickTitleNode","handlePageChange","newpage","setFiltersPage","allnote","loading","stateQ","getUrlParam","parseInt","fetchAllDataMome","display","flexDirection","sortTask","actOnCLickNode","dataFetch","PaginationContainer","setCurrentPage","postsPerPage","Math","ceil","indexOfLastPost","indexOfFirstPost","currentPosts","slice","i","components_BodyNavCreateTitle_BodyNavCreateTitle","pageNumber","routerHistory","styles","selectBorder","borderTop","borderRight","borderLeft","borderRadius","MemoNew","handleChange","_ref","today","SaveDatatoStore","_x","UNSAFE_componentWillMount","match","path","editnote","newnote","_this$state","classes","date","defaultValue","FormControl","Select","displayEmpty","MenuItem","hidden","compose","withStyles","editNote","datatamp","onSaveMemo","actions","MemoContent","show","welcome","routes","exact","main","components_Welcome_welcome","components_MemoContent_MemoContent","MemoContent_MemoNew","_ref2","PaintBrushSolid","setColorPage","site","setColorReset","onChangeTheme","showColorOptions","colorOptions","checked","htmlFor","openAndClose","isActive","initialColor","defaultProps","actSetColorPage","Language","onChangeLang","lang","changeLocale","onOpenClose","TestLoader","setLoading","setTimeout","clearTimeout","react_content_loader_es","speed","height","viewBox","foregroundColor","y","rx","ry","HomePage","removeEventListener","addEventListener","components_Header_Header","containers_PaginationContainer","components_PaintBrushSolid_PaintBrushSolid","components_LanguagePage_Language","route","component","showContentPage","RegistrationPage_RegistrationPage","passwordRetype","setPasswordRetype","_useState9","_useState10","errorL","setErrorL","objectSpread2","marginTop","textAlign","cursor","opacity","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","findIndex","tasks","result","myReducer","action","splice","contentCategory","datalogin","set_cookie","parts","pop","shift","getCookie","InitialState","appReducers","combineReducers","categorynew","dataUser","locales","vi","ja","en","messages","translations","IntlProvider","addLocaleData","viLocaleData","jaLocaleData","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","react_toastify","ConnectedIntlProvider","src_App","getElementById","URL","process","origin","fetch","response","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","__webpack_require__","d","__webpack_exports__","query_string__WEBPACK_IMPORTED_MODULE_0__","query_string__WEBPACK_IMPORTED_MODULE_0___default","urlData","keys","search","substring","QueryString","parse"],"mappings":"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","file":"static/js/main.35c12b6e.chunk.js","sourcesContent":["export const API_URL = 'https://mern-memo-app.herokuapp.com';\r\n// export const API_URL = 'http://localhost:3000';","import axios from \"axios\";\r\nimport * as Config from \"../constants/Config\";\r\n\r\nconst callAPI = (endpoint, method = 'GET', body) => {\r\n    let token = document.cookie && document.cookie.split(';').find(n => n.includes('authorization')) ? document.cookie.split(';').find(n => n.includes('authorization')).split('=')[1] : '';\r\n    // console.log(\"token\", token);\r\n\r\n    if (token !== '') {\r\n        return axios({\r\n            method: method,\r\n            url: `${Config.API_URL}/${endpoint}`,\r\n            data: body,\r\n            headers: {\r\n                \"authorization\": token,\r\n                \"accept\": \"application/json\"\r\n            }\r\n        })\r\n            .then(data => {\r\n                if (!data.data) {\r\n                    return false;\r\n                } else {\r\n                    return data;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.err);\r\n            });\r\n    } else {\r\n        return new Promise((res, rej) => {\r\n            res(false)\r\n        })\r\n    }\r\n}\r\n\r\nexport default callAPI;","import React, { useState, useEffect } from \"react\";\r\nimport \"./LoginPage.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CallAPI from '../../utils/apiCaller';\r\nimport { toast } from \"react-toastify\";\r\nimport * as Config from \"../../constants/Config\";\r\nimport axios from 'axios';\r\n\r\nexport default (props) => {\r\n\r\n    const [, setLoad] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n        CallAPI('api/checkToken', 'POST').then(doc => {\r\n            // console.log(doc);\r\n\r\n            setIsRedirect(doc && doc.data ? doc.data : '')\r\n        })\r\n\r\n        return () => {\r\n            setLoad(false)\r\n        }\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (username && password)\r\n            axios.post(`${Config.API_URL}/api/login`, { username, password })\r\n                .then(doc => {\r\n                    if (doc.data.token) {\r\n                        document.cookie = `authorization=${doc.data.token}; path=/`;\r\n                    }\r\n                    setIsRedirect(doc.data)\r\n                    toast.error('🦄 login success!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    toast.error('🦄 login error!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true\r\n                    });\r\n                })\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (isRedirect) {\r\n        return <Redirect to='/homepage' />\r\n    }\r\n\r\n    return (\r\n        <div className=\"limiter\">\r\n            <div className=\"container-login100\">\r\n                <div className=\"wrap-login100\">\r\n                    <div className=\"login100-pic js-tilt\" data-tilt>\r\n                        <img src=\"images/img-01.png\" alt=\"IMG\" />\r\n                    </div>\r\n                    <form className=\"login100-form validate-form\">\r\n                        <span className=\"login100-form-title\">\r\n                            Member Login\r\n                            </span>\r\n                        <div\r\n                            className=\"wrap-input100 validate-input\"\r\n                            data-validate=\"Valid email is required: ex@abc.xyz\"\r\n                        >\r\n                            <input\r\n                                className=\"input100\"\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={e => {\r\n                                    setUsername(e.currentTarget.value)\r\n                                }}\r\n                            />\r\n                            <span className=\"focus-input100\" />\r\n                            <span className=\"symbol-input100\">\r\n                                <i\r\n                                    className=\"fa fa-envelope\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div\r\n                            className=\"wrap-input100 validate-input\"\r\n                            data-validate=\"Password is required\"\r\n                        >\r\n                            <input\r\n                                className=\"input100\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={e => {\r\n                                    setPassword(e.currentTarget.value)\r\n                                }}\r\n                            />\r\n                            <span className=\"focus-input100\" />\r\n                            <span className=\"symbol-input100\">\r\n                                <i\r\n                                    className=\"fa fa-lock\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"container-login100-form-btn\">\r\n                            <button onClick={(e) => onSubmit(e)} className=\"login100-form-btn\">\r\n                                Login\r\n                                </button>\r\n                        </div>\r\n                        <div className=\"text-center p-t-136 center-account\">\r\n                            <Link to=\"/register\">\r\n                                Create your Account\r\n                                    <i\r\n                                    className=\"fa fa-long-arrow-right m-l-5\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as Types from \"./../constants/ActionTypes\";\r\nimport callApi from \"../utils/apiCaller\";\r\nimport moment from \"moment\";\r\n\r\n// fetch All Data\r\nexport const actFetchAllDataMemo = dataFetch => {\r\n    return {\r\n        type: Types.FETCH_ALL_DATA_MEMO,\r\n        dataFetch\r\n    };\r\n};\r\n\r\nexport const actFetchAllDataMemoRequest = () => {\r\n    return dispatch => {\r\n        return callApi(\"dataMemo\", \"GET\", null).then(res => {\r\n            if (res.data) {\r\n                dispatch(actFetchAllDataMemo(res.data));\r\n            }\r\n        });\r\n    };\r\n};\r\n// add data for Memo\r\nexport const actAddNodeMemo = dataAdd => {\r\n    return {\r\n        type: Types.ADD_NODE_ON_MEMO,\r\n        dataAdd\r\n    };\r\n};\r\n\r\nexport const actAddNodeMemoRequest = dataAdd => {\r\n    let date;\r\n    let date_rs;\r\n    date = moment(dataAdd.categoryDate);\r\n    date_rs = date.format(\"YYYY/MM/DD\");\r\n    dataAdd.categoryDate = date_rs;\r\n    console.log(dataAdd.categoryDate);\r\n\r\n    return dispatch => {\r\n        return callApi(\"dataMemo\", \"POST\", dataAdd).then(res => {\r\n            if (dataAdd) {\r\n                dispatch(actAddNodeMemo(dataAdd));\r\n            }\r\n        });\r\n    };\r\n};\r\n// SHOW_HISTORY_DELETE\r\nexport const actAddHistoryMemo = data => {\r\n    return {\r\n        type: Types.HISTORY_DELETE,\r\n        data\r\n    };\r\n};\r\n\r\nexport const acthistoryDeleteRequest = data => {\r\n    return dispatch => {\r\n        return callApi(\"htrdelete\", \"POST\", data);\r\n    };\r\n};\r\n\r\nexport const actGethistoryDeleteRequest = data => {\r\n    return dispatch => {\r\n        return callApi(\"htrdelete\", \"GET\", data).then(res => {\r\n            if (res.data) {\r\n                dispatch(actAddHistoryMemo(res.data));\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const actShowHistoryMemo = data => {\r\n    return {\r\n        type: Types.SHOW_HISTORY_DELETE,\r\n        data\r\n    };\r\n};\r\n\r\n// onClick note get id for all page\r\n\r\nexport const actOnCLickNode = idClick => {\r\n    return {\r\n        type: Types.ON_CLICK_NODE_MEMO,\r\n        idClick\r\n    };\r\n};\r\n\r\n// Data storage for memo\r\n\r\nexport const actSaveDatatoStore = dataSavetamp => {\r\n    return {\r\n        type: Types.SAVE_DATA_TO_STORE,\r\n        dataSavetamp\r\n    };\r\n};\r\n\r\nexport const actEditNode = dataEdit => {\r\n    return {\r\n        type: Types.EDIT_NODE,\r\n        dataEdit\r\n    };\r\n};\r\n\r\n//delete\r\n\r\nexport const actDeleteNodeRequest = id => {\r\n    console.log(id);\r\n\r\n    return dispatch => {\r\n        return callApi(`dataMemo/${id}`, \"DELETE\", null).then(res => {\r\n            dispatch(actDeleteNode(id));\r\n        });\r\n    };\r\n};\r\n\r\nexport const actDeleteNode = id => {\r\n    return {\r\n        type: Types.DELETE_NODE,\r\n        id\r\n    };\r\n};\r\n\r\n///update\r\nexport const actUpdateNodeRequest = data => {\r\n    console.log(data);\r\n\r\n    return dispatch => {\r\n        return callApi(`dataMemo/${data._id}`, \"PUT\", data).then(res => {\r\n            dispatch(actUpdateNode(data));\r\n        });\r\n    };\r\n};\r\n\r\nexport const actUpdateNode = data => {\r\n    return {\r\n        type: Types.UPDATE_NODE,\r\n        data\r\n    };\r\n};\r\n\r\n//clip\r\n\r\nexport const actUpdateClipNode = dataclip => {\r\n    return {\r\n        type: Types.CLIP_NODE,\r\n        dataclip\r\n    };\r\n};\r\n\r\nexport const actUpdateClipNodeRequest = data => {\r\n    return dispatch => {\r\n        console.log(data);\r\n\r\n        return callApi(`dataMemo/${data._id}`, \"PUT\", data).then(res => {\r\n            console.log(res.data);\r\n            dispatch(actUpdateClipNode(res.data));\r\n        });\r\n    };\r\n};\r\nexport const sortTask = sort => {\r\n    return {\r\n        type: Types.SORT,\r\n        payload: {\r\n            sort\r\n        }\r\n    };\r\n};\r\nexport const searchTask = data => {\r\n    return {\r\n        type: Types.SEARCH,\r\n        payload: {\r\n            data\r\n        }\r\n    };\r\n};\r\n\r\nexport const actShowAllNote = () => {\r\n    return {\r\n        type: Types.SHOW_ALL_NODE\r\n    };\r\n};\r\n\r\nexport const actUserLogin = datalogin => {\r\n    return {\r\n        type: Types.USER_LOGIN,\r\n        payload: {\r\n            datalogin\r\n        }\r\n    };\r\n};\r\n\r\nexport const actFetchAllDataUserLoginRequest = data => {\r\n    return dispatch => {\r\n        return callApi(\"user\", \"GET\", null).then(res => {\r\n            if (res.data) {\r\n                dispatch(actUserLogin(res.data));\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const actShowAllClip = () => {\r\n    return {\r\n        type: Types.CLIP_ALL\r\n    };\r\n};\r\n\r\nexport const actShowCategory = data => {\r\n    console.log(data);\r\n\r\n    return {\r\n        type: Types.SHOW_CATEGORY,\r\n        payload: {\r\n            data\r\n        }\r\n    };\r\n};\r\n\r\n//set color\r\n\r\nexport const actSetColorPage = color => {\r\n    console.log(color);\r\n\r\n    return {\r\n        type: Types.SET_COLOR_PAGE,\r\n        payload: {\r\n            color\r\n        }\r\n    };\r\n};\r\n//MULTI LANGUAGE\r\nexport const changeLocale = lang => {\r\n    return {\r\n        type: Types.CHANGE_LOCALE,\r\n        lang\r\n    };\r\n};\r\n\r\nexport const actResgintration = data => {\r\n    return {\r\n        type: Types.RESGINTRATION,\r\n        data\r\n    };\r\n};\r\nexport const actResgintrationRequest = data => {\r\n    console.log(data);\r\n    return dispatch => {\r\n        return callApi(\"user\", \"POST\", data).then(res => {\r\n            dispatch(actResgintration(res.data));\r\n        });\r\n    };\r\n\r\n};\r\n/*--NEW CATEGORY */\r\n\r\nexport const actNewCategoryUI = data => {\r\n    return {\r\n        type: Types.OPEN_CLOES_UI_NEWCATEGORY,\r\n        payload: {\r\n            data\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const actNewCategory = data => {\r\n    return {\r\n        type: Types.NEW_CATEGORY,\r\n        data\r\n    };\r\n};\r\n\r\nexport const actAddCategory = data => {\r\n    return {\r\n        type: Types.ADD_CATEGORY,\r\n        data\r\n    };\r\n};\r\n\r\nexport const actNewCategoryRequest = data => {\r\n    return dispatch => {\r\n        return callApi(\"category\", \"POST\", data).then(res => {\r\n            if (res.data) {\r\n                dispatch(actAddCategory(res.data));\r\n            }\r\n\r\n        })\r\n    };\r\n\r\n};\r\n\r\nexport const actGetCategory = data => {\r\n    return {\r\n        type: Types.GET_CATEGORY,\r\n        data\r\n    };\r\n};\r\n\r\nexport const actGetCategoryRequest = () => {\r\n    return dispatch => {\r\n        return callApi(\"category\", \"GET\", null).then(res => {\r\n            if (res.data) {\r\n                dispatch(actGetCategory(res.data));\r\n            }\r\n        });\r\n    };\r\n};","export const FETCH_ALL_DATA_MEMO = \"FETCH_ALL_DATA_MEMO\";\r\nexport const ADD_NODE_ON_MEMO = \"ADD_NODE_ON_MEMO\";\r\nexport const ON_CLICK_NODE_MEMO = \"ON_CLICK_NODE_MEMO\";\r\nexport const SAVE_DATA_TO_STORE = \"SAVE_DATA_TO_STORE\";\r\nexport const ON_EMPTY_DATA_NODE = \"ON_EMPTY_DATA_NODE\";\r\nexport const EDIT_NODE = \"EDIT_NODE\";\r\nexport const DELETE_NODE = \"DELETE_NODE\";\r\nexport const UPDATE_NODE = \"UPDATE_NODE\";\r\nexport const CLIP_NODE = \"CLIP_NODE\";\r\nexport const SORT = \"SORT\";\r\nexport const SEARCH = \"SEARCH\";\r\nexport const SHOW_ALL_NODE = \"SHOW_ALL_NODE\";\r\nexport const USER_LOGIN = \"USER_LOGIN\";\r\nexport const CLIP_ALL = \"CLIP_ALL\";\r\nexport const SHOW_CATEGORY = \"SHOW_CATEGORY\";\r\nexport const SET_COLOR_PAGE = \"SET_COLOR_PAGE\";\r\nexport const CHANGE_LOCALE = \"CHANGE_LOCALE\";\r\nexport const HISTORY_DELETE = \"HISTORY_DELETE\";\r\nexport const SHOW_HISTORY_DELETE = \"SHOW_HISTORY_DELETE\";\r\nexport const RESGINTRATION = \"RESGINTRATION\";\r\nexport const NEW_CATEGORY = \"NEW_CATEGORY\";\r\nexport const GET_CATEGORY =\"GET_CATEGORY\";\r\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\r\n\r\nexport const OPEN_CLOES_UI_NEWCATEGORY = 'OPEN_CLOES_UI_NEWCATEGORY';","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n    actAddNodeMemoRequest,\r\n    actEditNode,\r\n    actDeleteNodeRequest,\r\n    actUpdateNodeRequest,\r\n    actUpdateClipNodeRequest,\r\n    searchTask,\r\n    acthistoryDeleteRequest\r\n} from \"./../../actions/index\";\r\nimport { toast } from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: \"\",\r\n            statusclip: null,\r\n            value: true,\r\n            token: ''\r\n        };\r\n    }\r\n    EditMemo = idClick => {\r\n        let { datas } = this.props;\r\n        var rs = null;\r\n        datas.forEach(element => {\r\n            if (element._id === idClick) {\r\n                rs = element;\r\n            }\r\n        });\r\n        this.props.onEditMemo(rs);\r\n    };\r\n\r\n    SaveMemo = data => {\r\n\r\n        let { locale } = this.props;\r\n        let mtil =\r\n            locale === \"vn\"\r\n                ? \"Thêm ghi chú thành công\"\r\n                : locale === \"jp\"\r\n                    ? \"メモの追加に成功\"\r\n                    : locale === \"en\"\r\n                        ? \"Add Note Success\"\r\n                        : \" \";\r\n        let mtil2 =\r\n            locale === \"vn\"\r\n                ? \"Lưu ghi chú thành công\"\r\n                : locale === \"jp\"\r\n                    ? \"メモの保存に成功\"\r\n                    : locale === \"en\"\r\n                        ? \"Save Note Success\"\r\n                        : \" \";\r\n        if (data._id) {\r\n            data.categoryDate = moment(new Date()).format(\"YYYY/MM/DD\");\r\n            this.props.onUpdate(data);\r\n            toast.success(mtil2);\r\n        } else {\r\n            this.props.onAddMemo(data);\r\n            toast.success(`🐱${mtil}`);\r\n        }\r\n    };\r\n\r\n    ClipMemo = idClick => {\r\n        let { datas, locale } = this.props;\r\n        var rs = null;\r\n        let mtil =\r\n            locale === \"vn\"\r\n                ? \"Cập nhật Clip Lưu ý thành công\"\r\n                : locale === \"jp\"\r\n                    ? \"クリップノートの更新の成功\"\r\n                    : locale === \"en\"\r\n                        ? \"Update Clip Note Success\"\r\n                        : \" \";\r\n\r\n        datas.forEach(element => {\r\n            if (element._id === idClick) {\r\n                rs = element;\r\n            }\r\n        });\r\n        if (rs === null) {\r\n            return;\r\n\r\n\r\n        }\r\n        rs.clip = !rs.clip;\r\n        this.props.onCLipMemo(rs);\r\n        toast.success(`🐶${mtil}`);\r\n    };\r\n\r\n    checkClipColor = idClick => {\r\n        var rs = \"\";\r\n        let { datas } = this.props;\r\n        datas.forEach(element => {\r\n            if (element._id === idClick && element.clip === true) {\r\n                rs = \"activeIcon\";\r\n            }\r\n        });\r\n        return rs;\r\n    };\r\n\r\n    componentDidMount() {\r\n        let token = document.cookie && document.cookie.split(';').find(n => n.includes('authorization')) ? document.cookie.split(';').find(n => n.includes('authorization')).split('=')[1] : '';\r\n        this.setState({\r\n            token\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let { token } = this.state;\r\n        if (token === '') {\r\n            return <Redirect to='/' />\r\n        }\r\n    }\r\n\r\n    Clear = () => {\r\n        var rs = {\r\n            id: undefined,\r\n            categoryDate: \"\",\r\n            categoryName: \"\",\r\n            contentMemo: \"\",\r\n            titleMemo: \"\",\r\n            clip: false\r\n        };\r\n        return rs;\r\n    };\r\n    onChange = event => {\r\n\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n    onSearch = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSearch(this.state.keyword);\r\n    };\r\n\r\n    onDelete = (idClick) => {\r\n        let { datas, locale } = this.props;\r\n        let mtil =\r\n            locale === \"vn\"\r\n                ? \"Xóa ghi chú thành công\"\r\n                : locale === \"jp\"\r\n                    ? \"メモの削除の成功\"\r\n                    : locale === \"en\"\r\n                        ? \" Delete Note Success\"\r\n                        : \" \";\r\n        var rs = null;\r\n\r\n        datas.forEach(element => {\r\n            if (element._id === idClick) {\r\n                rs = element;\r\n            }\r\n        });\r\n        this.props.historyDelete(rs);\r\n\r\n        if (idClick) {\r\n            this.props.Delete(idClick);\r\n            toast.info(`🦄 ${mtil} !`, {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        let { keyword } = this.state;\r\n        let { color } = this.props.color;\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header__content\">\r\n                    <div className=\"header__content__create--new\">\r\n                        <Link to=\"/homepage/newnote\" className=\"newNode\">\r\n                            <Tooltip title=\"Create New Note\">\r\n                                <button>\r\n                                    <span>\r\n                                        <img src=\"/images/plus-solid.svg\" alt=\"\" />\r\n                                    &emsp;\r\n                                    <FormattedMessage\r\n                                            id=\"Create_new\"\r\n                                            defaultMessage=\"Create_new\"\r\n                                        >\r\n                                            {x => x}\r\n                                        </FormattedMessage>\r\n                                    </span>\r\n                                </button>\r\n                            </Tooltip>\r\n                        </Link>\r\n                    </div>\r\n                    <form onSubmit={this.onSearch}>\r\n                        <div\r\n                            className=\"header__content__title\"\r\n                            style={{ backgroundColor: color }}\r\n                        >\r\n\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"キーワードを入力\"\r\n                                name=\"keyword\"\r\n                                value={keyword}\r\n                                onChange={this.onChange}\r\n                            />\r\n\r\n                            {/* onClick={this.onSearch} */}\r\n                            <button type=\"submit\">\r\n                                <img\r\n                                    className=\"search\"\r\n                                    src=\"/images/search-solid.svg\"\r\n                                    alt=\"\"\r\n                                ></img>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div\r\n                    className=\"header__action\"\r\n                    style={{ backgroundColor: color }}\r\n                >\r\n                    <div className=\"header__action--left\">\r\n                        <Link to=\"/homepage/editnode\">\r\n\r\n                            <button\r\n                                onClick={() =>\r\n                                    this.EditMemo(this.props.idClick)\r\n                                }\r\n                            >\r\n                                <img src=\"/images/pen-solid.svg\" alt=\"\" />\r\n                                &nbsp;&nbsp;\r\n                                <FormattedMessage\r\n                                    id=\"Edit\"\r\n                                    defaultMessage=\"Edit\"\r\n                                >\r\n                                    {x => x}\r\n                                </FormattedMessage>\r\n                            </button>\r\n                        </Link>\r\n                        <button onClick={() => this.SaveMemo(this.props.data)}>\r\n                            <img src=\"/images/save-solid.svg\" alt=\"\" />\r\n                            &nbsp;&nbsp;\r\n                            <FormattedMessage id=\"Save\" defaultMessage=\"Save\">\r\n                                {x => x}\r\n                            </FormattedMessage>\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.ClipMemo(this.props.idClick)}\r\n                            className={this.checkClipColor(this.props.idClick)}\r\n                        >\r\n                            {this.checkClipColor(this.props.idClick) ? (\r\n                                <img\r\n                                    src=\"/images/paperclip-solid-red.svg\"\r\n                                    alt=\"\"\r\n                                />\r\n                            ) : (\r\n                                    <img src=\"/images/paperclip-solid.svg\" alt=\"\" />\r\n                                )}\r\n                            &nbsp;\r\n                            <FormattedMessage id=\"Clip\" defaultMessage=\"Clip\">\r\n                                {x => x}\r\n                            </FormattedMessage>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"header__action--right\">\r\n                        <button\r\n                            onClick={() => this.onDelete(this.props.idClick)}\r\n                        >\r\n                            <img src=\"/images/delete.svg\" alt=\"\" />\r\n                            &nbsp;&nbsp;\r\n                            <FormattedMessage\r\n                                id=\"Delete\"\r\n                                defaultMessage=\"Delete\"\r\n                            >\r\n                                {x => x}\r\n                            </FormattedMessage>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"header__action--right\">\r\n                        <button\r\n                            onClick={() => {\r\n                                document.cookie = `authorization=${this.state.token}; max-age=0`;\r\n                            }}\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.dataSavetamp,\r\n        datas: state.fetchAllDataMemo,\r\n        idClick: state.getActiveMemo,\r\n        dataEdit: state.dataSavetamp,\r\n        color: state.color,\r\n        locale: state.locale\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onAddMemo: dataAdd => {\r\n            dispatch(actAddNodeMemoRequest(dataAdd));\r\n        },\r\n        onEditMemo: dataEdit => {\r\n            dispatch(actEditNode(dataEdit));\r\n        },\r\n        Delete: id => {\r\n            dispatch(actDeleteNodeRequest(id));\r\n        },\r\n        onUpdate: data => {\r\n            dispatch(actUpdateNodeRequest(data));\r\n        },\r\n        onCLipMemo: dataClip => {\r\n            dispatch(actUpdateClipNodeRequest(dataClip));\r\n        },\r\n        onSearch: keyword => {\r\n            dispatch(searchTask(keyword));\r\n        },\r\n        historyDelete: data => {\r\n            dispatch(acthistoryDeleteRequest(data));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { actNewCategoryUI,actNewCategoryRequest } from \"../../actions/index\";\r\n\r\nclass NewCategory extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            category: \"\",\r\n            open: false\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.NewCategoryUI();\r\n    };\r\n\r\n    onChange = e => {\r\n        let target = e.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    onSaveCategory = () => {\r\n        if(this.state){\r\n            this.props.NewCategory(this.state);\r\n        }\r\n    };\r\n\r\n    CloseAndSava=()=>{\r\n        this.handleClose(); \r\n \r\n        this.onSaveCategory();\r\n    }\r\n    render() {\r\n\r\n        let {open} = this.props.categoryuinew;\r\n        return (\r\n            <React.Fragment>\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                >\r\n\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        New Category\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            label=\"category\"\r\n                            variant=\"outlined\"\r\n                            name=\"category\"\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.CloseAndSava}  color=\"primary\">\r\n                            Oke\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        datas: state.fetchAllDataMemo,\r\n        locale: state.locale,\r\n        categoryuinew: state.categoryuinew\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        NewCategory: data => {\r\n            dispatch(actNewCategoryRequest(data));\r\n        },\r\n        NewCategoryUI: ()=>{\r\n            dispatch(actNewCategoryUI(false))\r\n        }\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCategory);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport {\r\n    actShowAllNote,\r\n    actShowAllClip,\r\n    actShowCategory,\r\n    actShowHistoryMemo,\r\n    actGethistoryDeleteRequest,\r\n    // actNewCategoryRequest,\r\n    actGetCategoryRequest,\r\n    actNewCategoryUI\r\n} from \"../../actions/index\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport NewCategory from \"../NewCategory/NewCategory\";\r\n\r\nexport default (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [statusAll, setStatusAll] = useState(false);\r\n    const [status, setStatus] = useState(false);\r\n    const [statusClip, setstatusClip] = useState(false);\r\n    const [open,] = useState(false);\r\n\r\n    let datas = useSelector(state => state.fetchAllDataMemo);\r\n    // let locale = useSelector(state => state.locale)\r\n    // let categorynew = useSelector(state => state.categorynew);\r\n    let categoryget = useSelector(state => state.categoryget);\r\n\r\n    const showHistory = () => {\r\n        dispatch(actGethistoryDeleteRequest());\r\n        dispatch(actShowHistoryMemo());\r\n    };\r\n    const showCategoryClick = (item) => {\r\n        dispatch(actShowCategory(item))\r\n    }\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            // You can await here\r\n            await dispatch(actGetCategoryRequest());\r\n        }\r\n        fetchData();\r\n    }, [dispatch]);\r\n\r\n    const onOpenAndClose = status => {\r\n        setStatus(!status);\r\n        setstatusClip(false);\r\n        setStatusAll(false);\r\n    };\r\n    const onOpenAndCloseClip = statusClip => {\r\n        setStatus(false);\r\n        setstatusClip(!statusClip);\r\n        setStatusAll(false);\r\n    };\r\n    const onOpenAndCloseAll = statusAll => {\r\n        setStatus(false);\r\n        setstatusClip(false);\r\n        setStatusAll(!statusAll);\r\n    };\r\n    const onShowAllNote = () => {\r\n        dispatch(actShowAllNote());\r\n        onOpenAndCloseAll(statusAll);\r\n    };\r\n    const onShowAllClip = () => {\r\n        dispatch(actShowAllClip());\r\n        onOpenAndCloseClip(statusClip);\r\n    };\r\n    const handleClickOpen = () => {\r\n        dispatch(actNewCategoryUI(true))\r\n    }\r\n    const setCategory = () => {\r\n        let rs = [];\r\n        categoryget.forEach(element => {\r\n            rs.push(element.category);\r\n        });\r\n        let set = new Set(rs);\r\n        return [...set];\r\n    };\r\n    const countCategory = item => {\r\n        let count = 0;\r\n        datas.forEach(element => {\r\n            if (element.categoryName === item) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    };\r\n\r\n    const countClip = () => {\r\n        let count = 0;\r\n        datas.forEach(element => {\r\n            if (element.clip === true) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    };\r\n\r\n    const showCategory = () => {\r\n        let rs = [];\r\n        let categoryName = setCategory();\r\n        categoryName.forEach((item, index) =>\r\n            rs.push(\r\n                <div\r\n                    key={index}\r\n                    className=\"body__nav__create--new--Category__title--down--content\"\r\n                >\r\n                    <span>\r\n                        <img src=\"/images/tag-solid1.svg\" alt=\"\"></img>\r\n                    </span>\r\n                    <span onClick={() => showCategoryClick(item)}>\r\n                        {item}\r\n                    </span>\r\n\r\n                    <span>{countCategory(item)}</span>\r\n                </div>\r\n            )\r\n        );\r\n        return rs;\r\n    };\r\n    const componentNewCategory = <NewCategory open={open}></NewCategory>\r\n    return (\r\n        <>\r\n            {componentNewCategory}\r\n            <div className=\"body__nav__create--new\">\r\n                <section>\r\n                    <Tooltip title=\"Show All Note\">\r\n                        <div\r\n                            onClick={onShowAllNote}\r\n                            className={\r\n                                statusAll === true\r\n                                    ? \"body__nav__create--new--Allnodes activeCategory\"\r\n                                    : \"body__nav__create--new--Allnodes\"\r\n                            }\r\n                        >\r\n                            <span>\r\n                                <img\r\n                                    src=\"/images/sticky-note-solid.svg\"\r\n                                    alt=\"\"\r\n                                ></img>\r\n                            </span>\r\n                            <span>\r\n                                <FormattedMessage\r\n                                    id=\"All_notes\"\r\n                                    defaultMessage=\"All_notes\"\r\n                                >\r\n                                    {x => x}\r\n                                </FormattedMessage>\r\n                                &nbsp; &nbsp;\r\n                            </span>\r\n                            <span>{datas.length}</span>\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div className=\"body__nav__create--new--Category\">\r\n                        <Tooltip title=\"See Categorys\">\r\n                            <div\r\n                                onClick={() => onOpenAndClose(status)}\r\n                                className={\r\n                                    status === true\r\n                                        ? \"body__nav__create--new--Category__title activeCategory\"\r\n                                        : \"body__nav__create--new--Category__title\"\r\n                                }\r\n                            >\r\n                                <span>\r\n                                    <img src=\"/images/tags-solid.svg\" alt=\"\" />\r\n                                </span>\r\n                                <span>\r\n                                    <FormattedMessage\r\n                                        id=\"Category\"\r\n                                        defaultMessage=\"Category\"\r\n                                    >\r\n                                        {x => x}\r\n                                    </FormattedMessage>\r\n                                </span>\r\n                                <span\r\n                                    className={\r\n                                        status === true\r\n                                            ? \"down activedown\"\r\n                                            : \"down\"\r\n                                    }\r\n                                ></span>\r\n                            </div>\r\n                        </Tooltip>\r\n                        <div\r\n                            id=\"style\"\r\n                            className={\r\n                                status === true\r\n                                    ? \"body__nav__create--new--Category__title--down activeHeight\"\r\n                                    : \"body__nav__create--new--Category__title--down\"\r\n                            }\r\n                        >\r\n                            <div\r\n                                className=\"body__nav__create--new--Category__title--down--content\"\r\n                                onClick={handleClickOpen}\r\n                            >\r\n                                <span>\r\n                                    <img src=\"/images/plus-solid-while.svg\" alt=\"\" />\r\n                                </span>\r\n                                <span>New Category</span>\r\n                                <span>New</span>\r\n                            </div>\r\n\r\n                            {showCategory()}\r\n                        </div>\r\n                    </div>\r\n                    <Tooltip title=\"Show All Note\">\r\n                        <div\r\n                            onClick={() => onShowAllClip(true)}\r\n                            className={\r\n                                statusClip === true\r\n                                    ? \"body__nav__create--newclip activeCategory\"\r\n                                    : \"body__nav__create--newclip\"\r\n                            }\r\n                        >\r\n                            <span>\r\n                                <img\r\n                                    src=\"/images/paperclip-solid-while.svg\"\r\n                                    alt=\"\"\r\n                                ></img>\r\n                            </span>\r\n                            <span>\r\n                                <FormattedMessage\r\n                                    id=\"Clip\"\r\n                                    defaultMessage=\"Clip\"\r\n                                >\r\n                                    {x => x}\r\n                                </FormattedMessage>\r\n                            </span>\r\n                            <span>{countClip()}</span>\r\n                        </div>\r\n                    </Tooltip>\r\n                </section>\r\n                <div className=\"body__nav__create--delete\">\r\n                    <Tooltip title=\"Show History Delete\">\r\n                        <button\r\n                            onClick={showHistory}\r\n                            className=\"fas fa-trash-alt\"\r\n                        >\r\n                            <img src=\"/images/delete_create.svg\" alt=\"\" />\r\n                            &emsp;&nbsp;\r\n                            <FormattedMessage\r\n                                id=\"History_delete\"\r\n                                defaultMessage=\"History_delete\"\r\n                            >\r\n                                {x => x}\r\n                            </FormattedMessage>\r\n                        </button>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    actOnCLickNode,\r\n    actFetchAllDataMemoRequest,\r\n    sortTask\r\n} from \"../../actions/index\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport moment from 'moment';\r\nimport { getUrlParam, createUrl } from './url_handler.js';\r\n\r\n\r\nclass BodyNavCreateTitle extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            allnote: false,\r\n            sort: false,\r\n            loading: false,\r\n            posts: [],\r\n            stateQ: 1,\r\n            page: getUrlParam()[\"page\"] ? parseInt(getUrlParam()[\"page\"]) : 1\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { paginate } = this.props;\r\n        this.props.fetchAllDataMome();\r\n        paginate(this.state.page)\r\n\r\n    }\r\n\r\n    onClickSort = sortby => {\r\n        this.props.onSort({\r\n            value: -+this.props.sort.value,\r\n            sortby: sortby\r\n        });\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        })\r\n    };\r\n\r\n    onpageshow = (number) => {\r\n        this.setState({\r\n            page: number\r\n        })\r\n        let { history, paginate } = this.props;\r\n        history.history.push(createUrl({ page: number }))\r\n        paginate(number);//value là this.state.page\r\n    }\r\n\r\n    renderPage = () => {\r\n        let { pageNumbers, totalPage, showallnote } = this.props;\r\n        const currentPage = this.state.page;\r\n        return (\r\n            <nav className={showallnote.statusHistory === \"showHistory\" ? \"noneHistory\" : \"\"\r\n            }>\r\n                <ul className='pagination'>\r\n                    <li className={currentPage === 1 ? \"page-item\" : \"\"} >\r\n                        <button disabled={currentPage === 1} onClick={() => this.onpageshow(currentPage - 1)} className='page-link'>\r\n                            Prier\r\n                            </button>\r\n                    </li>\r\n                    {pageNumbers.map(number => (\r\n                        <li key={number}>\r\n                            <button onClick={() =>\r\n                                this.onpageshow(number)\r\n                            }\r\n                                className={currentPage === number ? 'page-link activepage' : 'page-link'}>\r\n                                {number}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                    <li className={totalPage === currentPage ? \"page-item\" : \"\"}>\r\n                        <button disabled={totalPage === currentPage} onClick={() => this.onpageshow(currentPage + 1)} className='page-link'>\r\n                            Next\r\n                            </button>\r\n                    </li>\r\n                </ul>\r\n            </nav >\r\n        );\r\n    }\r\n\r\n    showTitleContent = () => {\r\n        let rs = [];\r\n\r\n        let { idClick, sort, showallnote, historyDelete, posts } = this.props;\r\n        // if (posts) {\r\n        //     posts = posts;\r\n        // }\r\n        // const { posts } = this.state;\r\n        if (sort.sortby === \"date\") {\r\n            posts.sort((a, b) => {\r\n                a = new Date(a.categoryDate).getTime()\r\n                b = new Date(b.categoryDate).getTime()\r\n                if (a < b) {\r\n                    return -sort.value;\r\n                } else if (a > b) return sort.value;\r\n                else return 0;\r\n            });\r\n        }\r\n        if (showallnote.statusSearch && showallnote.statusSearch === \"search\") {\r\n            posts = posts.filter(task => {\r\n                return (\r\n                    task.titleMemo\r\n                        .toLowerCase()\r\n                        .indexOf(showallnote.keyword.toLowerCase()) !== -1\r\n                );\r\n            });\r\n        }\r\n        if (showallnote.statusShowALl && showallnote.statusShowALl === \"showall\") {\r\n            posts = this.props.posts;\r\n        }\r\n        if (showallnote.statusClip && showallnote.statusClip === \"showClip\") {\r\n            posts = posts.filter(task => task.clip === true);\r\n        }\r\n        if (showallnote.statusCategory && showallnote.statusCategory === \"showCategory\") {\r\n            posts = posts.filter(\r\n                task => task.categoryName === showallnote.nameCategory\r\n            );\r\n        }\r\n        if (showallnote.statusHistory && showallnote.statusHistory === \"showHistory\") {\r\n            posts = historyDelete;\r\n        }\r\n\r\n        posts.map((item, index) =>\r\n            rs.push(\r\n                <Link\r\n                    key={index}\r\n                    to=\"/homepage/contentnote\"\r\n                    style={{ width: \"100%\", textDecoration: \"none\" }}\r\n                >\r\n                    <div className=\"body__nav__create--title--content \">\r\n                        <div\r\n                            onClick={() => {\r\n                                this.props.onClickTitleNode(item._id);\r\n                            }}\r\n                            className={\r\n                                idClick === item._id\r\n                                    ? `body__nav__create--title--content--name active`\r\n                                    : `body__nav__create--title--content--name`\r\n                            }\r\n                        >\r\n                            <div className=\"body__nav__create--title--content--name--content\">\r\n                                <p>{item.titleMemo}</p>\r\n                                <span>\r\n                                    <img\r\n                                        src=\"/images/clock-regular.svg\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                    &nbsp; {moment(item.categoryDate).format(\"YYYY-MM-DD\")}\r\n                                </span>\r\n                                <span>\r\n                                    <img src=\"/images/tag-solid.svg\" alt=\"\" />\r\n                                    &nbsp; {item.categoryName}\r\n                                </span>\r\n                            </div>\r\n                            <div\r\n                                className={item.clip === false\r\n                                    ? `body__nav__create--title--content--name--icon`\r\n                                    : `body__nav__create--title--content--name--icon activeIcon`\r\n                                }\r\n                            >\r\n                                {item.clip === false ? (\"\") : (\r\n                                    <span>\r\n                                        <img\r\n                                            src=\"/images/paperclip-solid-c.svg\"\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"body__nav__create--title--content--icon\"></div>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        );\r\n\r\n        return rs;\r\n    };\r\n\r\n    handlePageChange = (newpage) => {\r\n        this.props.setFiltersPage(newpage);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"body__nav__create--title\">\r\n                <div className=\"body__nav__create--title--name \">\r\n                    <span>\r\n                        <FormattedMessage id=\"Title\" defaultMessage=\"Title\">\r\n                            {x => x}\r\n                        </FormattedMessage>\r\n                    </span>\r\n                    <Tooltip title=\"Sort by Date\">\r\n                        <span onClick={() => this.onClickSort(\"date\")}>\r\n                            <img className={this.state.sort === true ? \"sortactive\" : \"sort\"}\r\n                                src=\"/images/sort-amount-up-alt-solid.svg\"\r\n                                alt=\"\"\r\n                            ></img>\r\n                        </span>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <div style={{\r\n                    width: '100%',\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\"\r\n                }}>\r\n                    <div>\r\n                        {this.showTitleContent()}\r\n                    </div>\r\n                    <div >\r\n                        {this.renderPage()}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.fetchAllDataMemo,\r\n        idClick: state.getActiveMemo,\r\n        sort: state.sortTask,\r\n        showallnote: state.showallnote,\r\n        historyDelete: state.history,\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onClickTitleNode: idClick => {\r\n            dispatch(actOnCLickNode(idClick));\r\n        },\r\n        fetchAllDataMome: () => {\r\n            dispatch(actFetchAllDataMemoRequest());\r\n        },\r\n        onSort: sort => {\r\n            dispatch(sortTask(sort));\r\n        }\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BodyNavCreateTitle);\r\n","import React, { useState } from 'react';\r\nimport BodyNavCreateTitle from '../../components/BodyNavCreateTitle/BodyNavCreateTitle';\r\nimport { useSelector } from \"react-redux\";\r\nconst PaginationContainer = (props) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n\r\n\r\n    const post = useSelector(state => state.fetchAllDataMemo);\r\n\r\n    const totalPage = Math.ceil(post.length / postsPerPage);\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber)\r\n\r\n    };\r\n\r\n    const pageNumbers = [];\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = post.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    for (let i = 1; i <= totalPage; i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <BodyNavCreateTitle\r\n            totalPage={totalPage}\r\n            pageNumbers={pageNumbers}\r\n            paginate={paginate}\r\n            posts={currentPosts}\r\n            currentPage={currentPage}\r\n            history={props.routerHistory}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PaginationContainer;\r\n","const styles = () => ({\r\n    selectBorder: {\r\n        borderTop: \"1px solid #cccccc\",\r\n        borderRight: \"1px solid #cccccc\",\r\n        borderLeft: \"1px solid #cccccc\",\r\n        width: \"260px\",\r\n        borderRadius: \"4px\"\r\n    }\r\n})\r\nexport default styles;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport * as actions from \"../../actions/index\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\nimport compose from 'recompose/compose';\r\nclass MemoNew extends Component {\r\n\r\n\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            editnote: false,\r\n            newnote: false,\r\n            categoryDate: \"\",\r\n            categoryName: \"\",\r\n            titleMemo: \"\",\r\n            contentMemo: \"\",\r\n            clip: false,\r\n        };\r\n    }\r\n\r\n    handleChange = async function (event) {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        let today = moment(new Date());\r\n\r\n        await this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        if (this.state.categoryDate === null) {\r\n            this.state.categoryDate = today.format(\"YYYY/MM/DD\");\r\n        }\r\n\r\n\r\n        this.props.SaveDatatoStore(this.state);\r\n    };\r\n\r\n    UNSAFE_componentWillMount = () => {\r\n        var { match } = this.props;\r\n        if (match.path === \"/homepage/editnode\") {\r\n            this.setState({\r\n                _id: this.props.dataEdit._id,\r\n                categoryDate: this.props.dataEdit.categoryDate,\r\n                categoryName: this.props.dataEdit.categoryName,\r\n                contentMemo: this.props.dataEdit.contentMemo,\r\n                titleMemo: this.props.dataEdit.titleMemo,\r\n                clip: this.props.dataEdit.clip\r\n            });\r\n        }\r\n        if (match.path === \"/homepage/newnote\") {\r\n            this.setState({\r\n                _id: undefined,\r\n                categoryDate: null,\r\n                categoryName: \"\",\r\n                contentMemo: \"\",\r\n                titleMemo: \"\",\r\n                clip: false\r\n            });\r\n        }\r\n        if (match.path && match.path === \"/homepage/editnode\") {\r\n            this.setState({\r\n                editnote: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                editnote: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            // categoryDate,\r\n            categoryName,\r\n            titleMemo,\r\n            contentMemo,\r\n            editnote,\r\n        } = this.state;\r\n        /* SET CATEGODY */\r\n\r\n        let { categoryget, classes } = this.props;\r\n        let category = [];\r\n        categoryget.map(x => category.push(x.category));\r\n        let rs = new Set(category);\r\n        rs = [...rs]\r\n        /* GET DATE TODAY */\r\n        let date = moment(new Date());\r\n        date = date.format(\"YYYY-MM-DD\");\r\n\r\n        return (\r\n            <div className=\"Memo-new\">\r\n                <h1>\r\n                    {editnote === false ? (\r\n                        <FormattedMessage\r\n                            id=\"New_note\"\r\n                            defaultMessage=\"New_note\"\r\n                        >\r\n                            {x => x}\r\n                        </FormattedMessage>\r\n                    ) : (\r\n                            <FormattedMessage\r\n                                id=\"Edit_note\"\r\n                                defaultMessage=\"Edit_note\"\r\n                            >\r\n                                {x => x}\r\n                            </FormattedMessage>\r\n                        )}\r\n                </h1>\r\n                <form>\r\n                    <div className=\"Memo-new__herder\">\r\n                        <div className=\"Memo-new__herder__data-category\">\r\n                            {editnote ? (\r\n                                \"\"\r\n                            ) : (\r\n                                    <section>\r\n                                        <b>\r\n                                            {editnote === true ? (\r\n                                                <FormattedMessage\r\n                                                    id=\"Edit_date\"\r\n                                                    defaultMessage=\"Edit_date\"\r\n                                                >\r\n                                                    {x => x}\r\n                                                </FormattedMessage>\r\n                                            ) : (\r\n                                                    <FormattedMessage\r\n                                                        id=\"New_date\"\r\n                                                        defaultMessage=\"New_date\"\r\n                                                    >\r\n                                                        {x => x}\r\n                                                    </FormattedMessage>\r\n                                                )}\r\n                                        </b>\r\n                                        <span>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                name=\"categoryDate\"\r\n                                                onChange={e => this.handleChange(e)}\r\n                                                // value={date || \"\"}\r\n                                                defaultValue={date}\r\n                                            ></input>\r\n                                        </span>\r\n                                    </section>\r\n                                )}\r\n\r\n                            <section>\r\n                                <b>\r\n                                    {editnote === true ? (\r\n                                        <FormattedMessage\r\n                                            id=\"Edit_category\"\r\n                                            defaultMessage=\"Edit_category\"\r\n                                        >\r\n                                            {x => x}\r\n                                        </FormattedMessage>\r\n                                    ) : (\r\n                                            <FormattedMessage\r\n                                                id=\"New_category\"\r\n                                                defaultMessage=\"New_category\"\r\n                                            >\r\n                                                {x => x}\r\n                                            </FormattedMessage>\r\n                                        )}\r\n\r\n                                </b>\r\n                                <span>\r\n                                    <FormControl>\r\n                                        <Select\r\n                                            onChange={e => { this.handleChange(e) }}\r\n                                            className={classes.selectBorder}\r\n                                            name=\"categoryName\"\r\n                                            value={categoryName}\r\n                                            displayEmpty\r\n                                        >\r\n                                            <MenuItem value=\"\" disabled hidden>Choose here</MenuItem>\r\n                                            {rs.map((item, index) => (\r\n                                                <MenuItem key={index} value={item} >\r\n                                                    {item}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </span>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Memo-new__title\">\r\n                        <b>\r\n                            {editnote === true ? (\r\n                                <FormattedMessage\r\n                                    id=\"Edit_title\"\r\n                                    defaultMessage=\"Edit_title\"\r\n                                >\r\n                                    {x => x}\r\n                                </FormattedMessage>\r\n                            ) : (\r\n                                    <FormattedMessage\r\n                                        id=\"New_title\"\r\n                                        defaultMessage=\"New_title\"\r\n                                    >\r\n                                        {x => x}\r\n                                    </FormattedMessage>\r\n                                )}\r\n                        </b>\r\n                        <h1>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"titleMemo\"\r\n                                placeholder=\"fill in the title\"\r\n                                onChange={e => {\r\n                                    this.handleChange(e);\r\n                                }}\r\n                                value={titleMemo || \"\"}\r\n                            ></input>\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"Memo-new__content\">\r\n                        <b>\r\n                            {editnote === true ? (\r\n                                <FormattedMessage\r\n                                    id=\"Edit_content\"\r\n                                    defaultMessage=\"Edit_content\"\r\n                                >\r\n                                    {x => x}\r\n                                </FormattedMessage>\r\n                            ) : (\r\n                                    <FormattedMessage\r\n                                        id=\"Edit_content\"\r\n                                        defaultMessage=\"Edit_content\"\r\n                                    >\r\n                                        {x => x}\r\n                                    </FormattedMessage>\r\n                                )}\r\n                        </b>\r\n                        <textarea\r\n                            id=\"style\"\r\n                            type=\"text\"\r\n                            name=\"contentMemo\"\r\n                            onChange={e => {\r\n                                this.handleChange(e);\r\n                            }}\r\n                            value={contentMemo || \"\"}\r\n                        ></textarea>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataEdit: state.editNote,\r\n        datatamp: state.dataSavetamp,\r\n        categoryget: state.categoryget,\r\n        idClick: state.idClick\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSaveMemo: dataAdd => {\r\n            dispatch(actions.actAddNodeMemoRequest(dataAdd));\r\n        },\r\n        SaveDatatoStore: dataAdd => {\r\n            dispatch(actions.actSaveDatatoStore(dataAdd));\r\n        }\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(MemoNew);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport moment from 'moment'\r\nclass MemoContent extends Component {\r\n    show = () => {\r\n        var { data, showallnote, history } = this.props;\r\n        var idClick = this.props.idClick;\r\n        var rs = [];\r\n        if (\r\n            showallnote.statusHistory &&\r\n            showallnote.statusHistory === \"showHistory\"\r\n        ) {\r\n            data = history;\r\n        }\r\n        data.forEach(element => {\r\n            if (element._id === idClick) {\r\n                rs.push(\r\n                    <div key={element._id} className=\"body__action\">\r\n                        <h1 className=\"body__action-title\">\r\n                            <FormattedMessage\r\n                                id=\"Notes_content\"\r\n                                defaultMessage=\"Notes_content\"\r\n                            >\r\n                                {x => x}\r\n                            </FormattedMessage>\r\n                        </h1>\r\n                        <div className=\"body__action--header\">\r\n                            <div className=\"body__action--header--date--category\">\r\n                                <span>\r\n                                    <img\r\n                                        src=\"/images/clock-regular-black.svg\"\r\n                                        alt=\"\"\r\n                                    ></img>\r\n                                    &nbsp; {moment(element.categoryDate).format('YYYY-MM-DD')}\r\n                                </span>\r\n                                <span>\r\n                                    <img\r\n                                        src=\"/images/tag-solid-black.svg\"\r\n                                        alt=\"\"\r\n                                    ></img>\r\n                                    &nbsp; {element.categoryName}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"body__action--title\">\r\n                            <h1>{element.titleMemo}</h1>\r\n                        </div>\r\n                        <div className=\"body__action--content\">\r\n                            <p>{element.contentMemo}</p>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        return rs;\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment>{this.show()}</React.Fragment>;\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.fetchAllDataMemo,\r\n        idClick: state.getActiveMemo,\r\n        showallnote: state.showallnote,\r\n        history: state.history,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(MemoContent);\r\n","import React, { Component } from \"react\";\r\nimport \"./welcome.css\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nclass welcome extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"welcome\">\r\n                    <b>\r\n                        <FormattedMessage\r\n                            id=\"WELCOME_TO_OUR_WEB_APP\"\r\n                            defaultMessage=\"WELCOME_TO_OUR_WEB_APP\"\r\n                        >\r\n                            {x => x}\r\n                        </FormattedMessage>\r\n                    </b>\r\n                    <p>\r\n                        <FormattedMessage\r\n                            id=\"IT'S_NICE_TO_MEET_YOU\"\r\n                            defaultMessage=\"IT'S_NICE_TO_MEET_YOU\"\r\n                        >\r\n                            {x => x}\r\n                        </FormattedMessage>\r\n                        \r\n                    </p>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default welcome;\r\n","import React from \"react\";\r\nimport MemoNew from \"../components/MemoContent/MemoNew\";\r\nimport MemoContent from \"../components/MemoContent/MemoContent\";\r\nimport Welcome from \"../components/Welcome/welcome\";\r\n\r\nexport const routes = [\r\n\r\n    {\r\n        path: \"/homepage\",\r\n        exact: true,\r\n        main: () => (\r\n            <Welcome />\r\n        )\r\n    },\r\n    {\r\n        path: \"/homepage/contentnote\",\r\n        exact: false,\r\n        main: () => (\r\n            <MemoContent />\r\n        )\r\n    },\r\n    {\r\n        path: \"/homepage/newnote\",\r\n        exact: false,\r\n        main: ({ match, history }) => (\r\n            <MemoNew match={match} history={history} />\r\n        )\r\n    },\r\n    {\r\n        path: \"/homepage/editnode\",\r\n        exact: false,\r\n        main: ({ match, history }) => (\r\n            <MemoNew match={match} history={history} />\r\n        )\r\n    },\r\n\r\n];\r\n\r\nexport default routes;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./PaintBrushSolid.css\";\r\nimport { actSetColorPage } from \"../../actions/index\";\r\n\r\nclass PaintBrushSolid extends Component {\r\n    static defaultProps = {\r\n        colorOptions: [\r\n            { name: \"LightSalmon\", value: \"LightSalmon\" },\r\n            { name: \"FireBrick\", value: \"FireBrick\" },\r\n            { name: \"DarkSeaGreen\", value: \"DarkSeaGreen\" },\r\n            { name: \"LightCyan\", value: \"LightCyan\" },\r\n            { name: \"BlueViolet\", value: \"BlueViolet\" },\r\n            { name: \"PapayaWhip\", value: \"PapayaWhip\" },\r\n            { name: \"LightGreen\", value: \"LightGreen\" },\r\n            { name: \"Pink\", value: \"Pink\" },\r\n            { name: \"Green\", value: \"#313F46\" },\r\n\r\n        ]\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: false,\r\n            initialColor: \"\",\r\n            site: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setColorPage(this.state.site);\r\n    }\r\n    setColorPage = () => {\r\n        this.props.setColorPage(this.state.site);\r\n    };\r\n\r\n    setColorReset = () => {\r\n        this.props.setColorPage(\"#F4F4F4\");\r\n    };\r\n\r\n    onChangeTheme = event => {\r\n        this.setState({\r\n            site: event.currentTarget.value\r\n        });\r\n    };\r\n    showColorOptions = () => {\r\n        let rs = [];\r\n        let { colorOptions } = this.props;\r\n\r\n        colorOptions.map((item, index) =>\r\n            rs.push(\r\n                <div key={index} className=\"theme-config--color__item\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        id={`${index}`}\r\n                        name={`${item.name}`}\r\n                        value={`${item.value}`}\r\n                        onChange={e => this.onChangeTheme(e)}\r\n                        checked={this.state.site === item.value}\r\n                    ></input>\r\n                    <label htmlFor={`${index}`}>{item.name}</label>\r\n                </div>\r\n            )\r\n        );\r\n\r\n        return rs;\r\n    };\r\n    openAndClose = () => {\r\n        let { isActive } = this.state;\r\n        this.setState({\r\n            isActive: !isActive\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div\r\n                className={\r\n                    this.state.isActive === false\r\n                        ? \"them-config active-them-config\"\r\n                        : \"them-config \"\r\n                }\r\n            >\r\n                <button\r\n                    onClick={this.openAndClose}\r\n                    className=\"them-config-button\"\r\n                >\r\n                    <img src=\"/images/paint-brush-solid.svg\" alt=\"\"></img>\r\n                </button>\r\n                <div className=\"theme-config--color\">\r\n                    <b>Header Color</b>\r\n                    {this.showColorOptions()}\r\n                    <input\r\n                        className=\"change\"\r\n                        onClick={this.setColorPage}\r\n                        type=\"submit\"\r\n                        value=\"Change\"\r\n                    ></input>\r\n                    <input\r\n                        className=\"change\"\r\n                        onClick={this.setColorReset}\r\n                        type=\"submit\"\r\n                        value=\"Reset\"\r\n                    ></input>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        setColorPage: color => {\r\n            dispatch(actSetColorPage(color));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(PaintBrushSolid);\r\n","import React, { Component } from \"react\";\r\nimport \"./Language.css\";\r\nimport { changeLocale } from \"../../actions/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Language extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: false\r\n        };\r\n    }\r\n\r\n    onChangeLang = lang => {\r\n        const { status } = this.state;\r\n        this.props.changeLocale(lang);\r\n        this.setState({ status: !status })\r\n    };\r\n\r\n    onOpenClose = () => {\r\n        const { status } = this.state;\r\n        this.setState({ status: !status })\r\n    };\r\n    render() {\r\n        const { status } = this.state;\r\n        return (\r\n            <h1\r\n                className={\r\n                    status === false\r\n                        ? \"language language-active\"\r\n                        : \"language \"\r\n                }\r\n            >\r\n                <div className=\"language-icon\" onClick={this.onOpenClose}>\r\n                    <img src=\"/images/language-solid.svg\" alt=\"\"></img>\r\n                </div>\r\n                <div className=\"language-name\">\r\n                    <button style={{ borderTop: '1px solid blue' }} onClick={() => this.onChangeLang(\"en\")}>\r\n                        ENGLISH\r\n                    </button>\r\n                    <button onClick={() => this.onChangeLang(\"vn\")}>\r\n                        VIETNAM\r\n                    </button>\r\n                    <button onClick={() => this.onChangeLang(\"jp\")}>\r\n                        JAPAN\r\n                    </button>\r\n                </div>\r\n            </h1 >\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        locale: state.locale\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeLocale: lang => {\r\n            dispatch(changeLocale(lang));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Language);\r\n","import React, { useState, useEffect } from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\nimport './ContentLoader.css'\r\n\r\nexport default (props) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // almost same as componentDidMount\r\n        const loading = setTimeout(() => { setLoading(false) }, 1000);\r\n        return () => {\r\n            // almost same as componentWillUnmount\r\n            clearTimeout(loading);\r\n        };\r\n    });\r\n    // const timer = () => setTimeout(() => {\r\n    //     setLoading(true)\r\n    // }, 1000);\r\n    return (\r\n\r\n        loading ? (\r\n            <ContentLoader\r\n                className=\"contentLoader\"\r\n                speed={4}\r\n                width={450}\r\n                height={600}\r\n                viewBox=\"0 0 400 475\"\r\n                backgroundColor=\"#f3f3f3\"\r\n                foregroundColor=\"#ecebeb\"\r\n            >\r\n                <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"440\" height=\"4\" />\r\n                <rect x=\"0\" y=\"10\" rx=\"0\" ry=\"0\" width=\"440\" height=\"40\" />\r\n\r\n                <rect x=\"0\" y=\"60\" rx=\"0\" ry=\"0\" width=\"440\" height=\"4\" />\r\n                <rect x=\"0\" y=\"70\" rx=\"0\" ry=\"0\" width=\"440\" height=\"40\" />\r\n\r\n                <rect x=\"0\" y=\"120\" rx=\"0\" ry=\"0\" width=\"440\" height=\"4\" />\r\n                <rect x=\"0\" y=\"130\" rx=\"0\" ry=\"0\" width=\"440\" height=\"40\" />\r\n\r\n                <rect x=\"0\" y=\"180\" rx=\"0\" ry=\"0\" width=\"440\" height=\"4\" />\r\n                <rect x=\"0\" y=\"190\" rx=\"0\" ry=\"0\" width=\"440\" height=\"40\" />\r\n\r\n                <rect x=\"0\" y=\"240\" rx=\"0\" ry=\"0\" width=\"440\" height=\"4\" />\r\n                <rect x=\"0\" y=\"250\" rx=\"0\" ry=\"0\" width=\"440\" height=\"40\" />\r\n\r\n                <rect x=\"0\" y=\"320\" rx=\"0\" ry=\"0\" width=\"440\" height=\"4\" />\r\n                <rect x=\"0\" y=\"330\" rx=\"0\" ry=\"0\" width=\"440\" height=\"40\" />\r\n\r\n                <rect x=\"0\" y=\"380\" rx=\"0\" ry=\"0\" width=\"440\" height=\"4\" />\r\n                <rect x=\"0\" y=\"390\" rx=\"0\" ry=\"0\" width=\"440\" height=\"40\" />\r\n\r\n                <rect x=\"0\" y=\"440\" rx=\"0\" ry=\"0\" width=\"440\" height=\"4\" />\r\n                <rect x=\"0\" y=\"450\" rx=\"0\" ry=\"0\" width=\"440\" height=\"40\" />\r\n            </ContentLoader>\r\n        ) : \"\"\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport BodyNavCreate from \"../../components/BodyNavCreateNew/BodyNavCreate\";\r\n// import BodyNavCreateTitle from \"../../components/BodyNavCreateTitle/BodyNavCreateTitle\";\r\nimport PaginationContainer from \"../../containers/PaginationContainer\";\r\n\r\nimport routes from \"../../routes/routesHomePage\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PaintBrushSolid from \"../../components/PaintBrushSolid/PaintBrushSolid\";\r\nimport Language from \"../../components/LanguagePage/Language\";\r\nimport NewCategory from '../../components/NewCategory/NewCategory'\r\nimport TestLoader from \"../../components/TestLoader/TestLoader\"\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport CallAPI from '../../utils/apiCaller';\r\nexport default (props) => {\r\n\r\n    const [isRedirect, setIsRedirect] = useState('');\r\n\r\n    var a = () => {\r\n        CallAPI('api/checkToken', 'POST').then(doc => {\r\n            setIsRedirect(!doc.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.removeEventListener('click', a)\r\n        CallAPI('api/checkToken', 'POST').then(doc => {\r\n            if (doc && doc.data) {\r\n                document.addEventListener('click', a)\r\n            } else {\r\n                setIsRedirect(true)\r\n            }\r\n        })\r\n        return () => {\r\n            document.removeEventListener('click', a)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    if (isRedirect) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    const showContentPage = routes => {\r\n        var rs = null;\r\n        if (routes.length > 0) {\r\n            rs = routes.map((route, index) => {\r\n                return (\r\n                    <Route\r\n                        key={index}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={route.main}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n        return <Switch>{rs}</Switch>;\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"wapper\">\r\n                <Header />\r\n                <div className=\"body\">\r\n                    <BodyNavCreate />\r\n                    {/* <BodyNavCreateTitle></BodyNavCreateTitle> */}\r\n                    <TestLoader />\r\n                    <PaginationContainer routerHistory={props} />\r\n                    <PaintBrushSolid />\r\n                    <Language />\r\n                    <NewCategory />\r\n                    {/* show routes */}\r\n                    <Switch>\r\n                        {showContentPage(routes)}\r\n                    </Switch>\r\n\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./RegistrationPage.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from 'axios';\r\nexport default (props) => {\r\n\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const [passwordRetype, setPasswordRetype] = useState('');\r\n\r\n\r\n    const [errorL, setErrorL] = useState(false)\r\n\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (username && password && passwordRetype) {\r\n            if (username.length < 7 || username.length > 20) {\r\n                username.length < 7 ? setErrorL('Register failed Username is too short!') : setErrorL('Register failed Username is too long!')\r\n            }\r\n            else if (password === passwordRetype) {\r\n                axios.post('/api/register', { username, password })\r\n                    .then(doc => {\r\n                        toast.error('🦄 register seccess!', {\r\n                            position: \"top-right\",\r\n                            autoClose: 5000,\r\n                            hideProgressBar: false,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true\r\n                        });\r\n                        if (doc.data) {\r\n                            setIsRedirect(true)\r\n                        } else {\r\n                            setErrorL('Register failed \\n Username is exist')\r\n                        }\r\n\r\n                    })\r\n            } else {\r\n\r\n                setErrorL(\"Register failed \\n Password doesn't match \")\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    if (isRedirect) {\r\n        return (<Redirect to=\"/\" />)\r\n    }\r\n    return (\r\n        <div className=\"limiter\">\r\n            <div className=\"container-login100\">\r\n                <p style={{ ...{ marginTop: '25px', color: 'red', textAlign: 'center', cursor: 'default' }, opacity: `${errorL ? 1 : 0}` }}>\r\n                    {errorL}\r\n                </p>\r\n                <div className=\"wrap-login100\">\r\n                    <div className=\"login100-pic js-tilt\" data-tilt>\r\n                        <img src=\"images/img-01.png\" alt=\"IMG\" />\r\n                    </div>\r\n                    <form className=\"login100-form validate-form\" method=\"post\">\r\n                        <span className=\"login100-form-title\">\r\n                            Member Registration\r\n                            </span>\r\n                        <div\r\n                            className=\"wrap-input100 validate-input\"\r\n                            data-validate=\"Valid email is required: ex@abc.xyz\"\r\n                        >\r\n                            <input\r\n                                className=\"input100\"\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                placeholder=\"username\"\r\n                                onChange={e => {\r\n                                    setUsername(e.currentTarget.value);\r\n                                    setIsRedirect('');\r\n                                    setErrorL('')\r\n                                }\r\n                                }\r\n                            />\r\n                            <span className=\"focus-input100\" />\r\n                            <span className=\"symbol-input100\">\r\n                                <i\r\n                                    className=\"fa fa-envelope\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div\r\n                            className=\"wrap-input100 validate-input\"\r\n                            data-validate=\"Password is required\"\r\n                        >\r\n                            <input\r\n                                className=\"input100\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={e => {\r\n                                    setPassword(e.currentTarget.value)\r\n                                    setIsRedirect('');\r\n                                    setErrorL('')\r\n                                }}\r\n                            />\r\n                            <span className=\"focus-input100\" />\r\n                            <span className=\"symbol-input100\">\r\n                                <i\r\n                                    className=\"fa fa-lock\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div\r\n                            className=\"wrap-input100 validate-input\"\r\n                            data-validate=\"Password is required\"\r\n                        >\r\n                            <input\r\n                                className=\"input100\"\r\n                                type=\"password\"\r\n                                name=\"passwordRetype\"\r\n                                placeholder=\"passwordRetype\"\r\n                                onChange={e => {\r\n                                    setPasswordRetype(e.currentTarget.value)\r\n                                    setIsRedirect('');\r\n                                    setErrorL('')\r\n                                }}\r\n                            />\r\n                            <span className=\"focus-input100\" />\r\n                            <span className=\"symbol-input100\">\r\n                                <i\r\n                                    className=\"fa fa-lock\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"container-login100-form-btn\">\r\n                            <button onClick={onSubmit} className=\"login100-form-btn\">\r\n                                onRegister\r\n                                </button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport Login from \"../page/LoginPage/LoginPage\";\r\nimport HomePage from \"../page/HomePage/HomePage\";\r\nimport Registration from \"../page/RegistrationPage/RegistrationPage\";\r\n\r\nexport const routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        main: () => (\r\n            <Login />\r\n        )\r\n    },\r\n    {\r\n        path: \"/homepage\",\r\n        exact: false,\r\n        main: ({ match, history }) => (\r\n            <HomePage match={match} history={history} />\r\n        )\r\n    },\r\n    {\r\n        path: \"/register\",\r\n        exact: false,\r\n        main: () => (\r\n            <Registration />\r\n        )\r\n    },\r\n\r\n];\r\n\r\nexport default routes;","import React, { Component } from \"react\";\r\nimport routes from \"./routes/routesAllPage\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <React.Fragment>\r\n                    {this.showContentPage(routes)}\r\n                </React.Fragment>\r\n            </Router>\r\n        );\r\n    }\r\n    showContentPage = routes => {\r\n        var rs = null;\r\n        if (routes.length > 0) {\r\n            rs = routes.map((route, index) => {\r\n                return (\r\n                    <Route\r\n                        key={index}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={route.main}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n        return <Switch>{rs}</Switch>;\r\n    };\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as Types from \"../constants/ActionTypes\";\r\nimport moment from \"moment\";\r\nconst initialState = [];\r\nvar findIndex = (tasks, id) => {\r\n    var result = -1;\r\n    tasks.forEach((task, index) => {\r\n        if (task._id === id) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result;\r\n};\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    var index = -1;\r\n    var today = moment(new Date());\r\n    switch (action.type) {\r\n        case Types.FETCH_ALL_DATA_MEMO:\r\n            state = action.dataFetch;\r\n            return [...state];\r\n        case Types.ADD_NODE_ON_MEMO:\r\n            let task = {\r\n                categoryDate:\r\n                    action.dataAdd.categoryDate === null\r\n                        ? (action.dataAdd.categoryDate = today.format(\r\n                            \"YYYY/MM/DD\"\r\n                        ))\r\n                        : moment(action.dataAdd.categoryDate).format(\"YYYY/MM/DD\"),\r\n                categoryName: action.dataAdd.categoryName,\r\n                titleMemo: action.dataAdd.titleMemo,\r\n                contentMemo: action.dataAdd.contentMemo,\r\n                id: action.dataAdd._id,\r\n                clip: action.dataAdd.clip\r\n            };\r\n            state.push(task);\r\n            return [...state];\r\n        case Types.DELETE_NODE:\r\n\r\n            index = findIndex(state, action.id);\r\n\r\n            state.splice(index, 1);\r\n\r\n            return [...state];\r\n        case Types.UPDATE_NODE:\r\n            action.data.categoryDate = today.format(\"YYYY/MM/DD\")\r\n            index = findIndex(state, action.data._id);\r\n            state[index] = action.data;\r\n            return [...state];\r\n        case Types.CLIP_NODE:\r\n            index = findIndex(state, action.dataclip.id);\r\n            state[index] = action.dataclip;\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from \"../constants/ActionTypes\";\r\n\r\nconst initialState = -1;\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.ON_CLICK_NODE_MEMO:\r\n            state = action.idClick;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from \"../constants/ActionTypes\";\r\n\r\nvar initialState = {};\r\nconst contentCategory = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.SAVE_DATA_TO_STORE:\r\n            state = action.dataSavetamp;\r\n            return { ...state };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default contentCategory;\r\n","import * as Types from \"../constants/ActionTypes\";\r\n\r\nvar initialState = {};\r\nconst myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.EDIT_NODE:\r\n            state = action.dataEdit;\r\n            return { ...state };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from '../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n    value : 1, \r\n    sortby : \"\",\r\n};\r\nvar myReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case Types.SORT:\r\n            return {\r\n                value : action.payload.sort.value,\r\n                sortby : action.payload.sort.sortby\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from \"../constants/ActionTypes\";\r\n\r\nconst initialState = {};\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.SHOW_ALL_NODE:\r\n            return {\r\n                statusShowALl: \"showall\"\r\n            };\r\n        case Types.SEARCH:\r\n            return {\r\n                statusSearch: \"search\",\r\n                keyword: action.payload.data\r\n            };\r\n        case Types.CLIP_ALL:\r\n            return {\r\n                statusClip: \"showClip\"\r\n            };\r\n        case Types.SHOW_CATEGORY:\r\n            return {\r\n                statusCategory: \"showCategory\",\r\n                nameCategory: action.payload.data\r\n            };\r\n        case Types.SHOW_HISTORY_DELETE:\r\n            return {\r\n                statusHistory: \"showHistory\"\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from '../constants/ActionTypes';\r\n\r\nvar initialState = [];\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.USER_LOGIN:\r\n            state = action.payload.datalogin\r\n            return [...state];\r\n        case Types.RESGINTRATION:\r\n            // state = state.push(action.data)\r\n            return [...state]\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from '../constants/ActionTypes';\r\n\r\nvar initialState = {color:\"\"};\r\n\r\nvar myReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case Types.SET_COLOR_PAGE:\r\n            return {\r\n                color : action.payload.color\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from '../constants/ActionTypes';\r\n\r\nvar getCookie = (name) => {\r\n    var value = \"; \" + document.cookie;\r\n    var parts = value.split(\"; \" + name + \"=\");\r\n    if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n}\r\nvar set_cookie = (name, value) => {\r\n    document.cookie = name + '=' + value + '; Path=/;';\r\n}\r\n\r\nvar lang = getCookie(\"lang\")\r\nvar InitialState = (lang && lang === 'vn') ? 'vn' : (lang === 'jp' ? 'jp' : 'en');\r\nset_cookie(\"lang\", InitialState)\r\n\r\nconst myReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case Types.CHANGE_LOCALE:\r\n            state = action.lang === 'vn' ? 'vn' : (action.lang === 'jp' ? 'jp' : 'en');\r\n            set_cookie(\"lang\", state);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default myReducer;","import * as Types from \"../constants/ActionTypes\";\r\n\r\nvar initialState = [];\r\nconst myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.HISTORY_DELETE:\r\n            state = action.data\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from \"../constants/ActionTypes\";\r\n\r\nvar initialState = {};\r\nconst myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.NEW_CATEGORY:\r\n            state = action.data\r\n            return {...state};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from \"../constants/ActionTypes\";\r\n\r\nvar initialState = [];\r\nconst myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.GET_CATEGORY:\r\n            return [...action.data];\r\n        case Types.ADD_CATEGORY:\r\n            let task = {\r\n                category : action.data.category,\r\n                id : action.data.id\r\n            };\r\n            state.push(task);\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as Types from '../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n    open : false\r\n};\r\nvar myReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case Types.OPEN_CLOES_UI_NEWCATEGORY:\r\n            return {\r\n                open : action.payload.data\r\n            };\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default myReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport fetchAllDataMemo from \"./ReducerFetchAllData\";\r\nimport getActiveMemo from \"./ReducerGetIdOnClick\";\r\nimport dataSavetamp from \"./ReducerDataSavetam\";\r\nimport editNote from \"./ReducerEditNote\";\r\nimport sortTask from \"./ReducerSortTitle\";\r\nimport showallnote from \"./ReducerShowAll\";\r\nimport dataUser from \"./ReducerUserLogin\";\r\nimport color from \"./ReducerSetColorPage\";\r\nimport locale from \"./ReducerLocale\";\r\nimport history from './ReducerHistoryDelete';\r\nimport categorynew from './ReducerAddCategory';\r\nimport categoryget from './ReducerGetCategory';\r\nimport categoryuinew from './ReducerUiNewCategory';\r\nconst appReducers = combineReducers({\r\n    categoryuinew,\r\n    categoryget,\r\n    categorynew,\r\n    history,\r\n    fetchAllDataMemo,\r\n    getActiveMemo,\r\n    dataSavetamp,\r\n    editNote,\r\n    sortTask,\r\n    showallnote,\r\n    dataUser,\r\n    color,\r\n    locale\r\n});\r\n\r\nexport default appReducers;\r\n","import vi from \"./vi.json\";\r\nimport ja from \"./ja.json\";\r\nimport en from \"./en.json\";\r\nexport default { vi, ja, en}","import { connect } from 'react-redux';\r\nimport { IntlProvider } from 'react-intl';\r\nimport translations from './locales/locales';\r\n\r\nfunction mapStateToProps(state) {\r\n  const lang = state.locale === 'vn' ? 'vi' : (state.locale === 'jp' ? 'ja' : 'en');\r\n  const messages = translations[lang];\r\n  return { locale: lang, messages: messages };\r\n}\r\n\r\nexport default connect(mapStateToProps)(IntlProvider);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n// import redux\r\nimport {createStore,compose ,applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport appReducers from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// multi language\r\nimport { addLocaleData } from \"react-intl\";\r\nimport viLocaleData from \"react-intl/locale-data/vi\";\r\nimport jaLocaleData from \"react-intl/locale-data/ja\";\r\nimport ConnectedIntlProvider from './i18n/ConnectedIntlProvider';\r\n\r\naddLocaleData(viLocaleData);\r\naddLocaleData(jaLocaleData);\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    appReducers,\r\n    composeEnhancer(applyMiddleware(thunk)),\r\n);\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n<ToastContainer/>\r\n    <ConnectedIntlProvider>\r\n        <App />\r\n    </ConnectedIntlProvider>\r\n</Provider>\r\n, \r\n\r\ndocument.getElementById('root'));\r\nregisterServiceWorker();\r\n\r\n","import QueryString from 'query-string';\r\n\r\n\r\nexport function createUrl(urlData) {\r\n  const keys = Object.keys(urlData);\r\n  let search = '?';\r\n  keys.forEach(key => {\r\n    if (urlData[key] !== null && urlData[key] !== '') {\r\n      search += `${key}=${urlData[key]}&`;\r\n    }\r\n  });\r\n  return search.substring(0, search.length - 1);\r\n}\r\n\r\nexport function getUrl(location) {\r\n  // const location = location;\r\n  const data =\r\n    process.browser && location.search\r\n      ? location.search.slice(location.search.indexOf('?') + 1).split('&')\r\n      : [];\r\n  const urlData = {};\r\n  data.forEach(data => {\r\n    try {\r\n      data = data.split('=');\r\n      const dataVal = decodeURIComponent(data[1]);\r\n      urlData[data[0]] = dataVal;\r\n    } catch (e) { }\r\n  });\r\n  return urlData;\r\n}\r\n\r\nexport function setStateToUrl(state) {\r\n  let urlData = {};\r\n  for (const key in state) {\r\n    if (state.hasOwnProperty(key)) {\r\n      switch (key) {\r\n        case 'date_range':\r\n          let data = Object.values(state[key]);\r\n          if (data[0] === null && data[1] === null) {\r\n            data = '';\r\n          }\r\n          urlData[key] = data && data.length ? data.join() : null;\r\n          break;\r\n        case 'amenities':\r\n          urlData[key] =\r\n            state[key] && state[key].length ? state[key].join() : null;\r\n          break;\r\n        case 'room':\r\n          if (state[key]) {\r\n            urlData[key] = state[key] ? state[key] : 0;\r\n          } else {\r\n            urlData[key] = '';\r\n          }\r\n          break;\r\n        case 'guest':\r\n          if (state[key]) {\r\n            urlData[key] = state[key] ? state[key] : 0;\r\n          } else {\r\n            urlData[key] = '';\r\n          }\r\n          break;\r\n        case 'property':\r\n          urlData[key] =\r\n            state[key] && state[key].length ? state[key].join() : null;\r\n          break;\r\n        case 'price':\r\n          urlData[key] =\r\n            state[key] && state[key].length ? state[key].join() : null;\r\n          break;\r\n        case 'location':\r\n          if (state[key] && state[key].lat) {\r\n            urlData[`${key}_lat`] = state[key].lat;\r\n          }\r\n          if (state[key] && state[key].lng) {\r\n            urlData[`${key}_lng`] = state[key].lng;\r\n          }\r\n          break;\r\n        case 'reset':\r\n          urlData = state[key];\r\n          break;\r\n\r\n        default:\r\n          urlData[key] = state[key];\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return createUrl(urlData);\r\n}\r\n\r\nexport function getStateFromUrl(location) {\r\n  const urlData = getUrl(location);\r\n  const state = {};\r\n  for (const key in urlData) {\r\n    if (urlData.hasOwnProperty(key)) {\r\n      switch (key) {\r\n        // case 'text':\r\n        //   state[key] =\r\n        //     urlData[key] && urlData[key] !== 'null' ? urlData[key] : '';\r\n        //   break;\r\n        // case 'categories':\r\n        //   state[key] =\r\n        //     urlData[key] && urlData[key] !== 'null'\r\n        //       ? urlData[key].split(',')\r\n        //       : [];\r\n        //   break;\r\n\r\n        case 'date_range':\r\n          const date = urlData[key] ? urlData[key] : null;\r\n          if (date) {\r\n            let splitDate = date ? date.split(',') : null;\r\n            let setStartDate = splitDate ? splitDate[0] : null;\r\n            let setEndDate = splitDate ? splitDate[1] : null;\r\n            state[key] = date\r\n              ? { setStartDate: setStartDate, setEndDate: setEndDate }\r\n              : null;\r\n          }\r\n          break;\r\n\r\n        case 'amenities':\r\n          state[key] =\r\n            urlData[key] && urlData[key] !== 'null'\r\n              ? urlData[key].split(',')\r\n              : [];\r\n          break;\r\n\r\n        case 'room':\r\n          if (urlData[key]) {\r\n            state[key] = urlData[key] ? urlData[key] : 0;\r\n          } else {\r\n            state[key] = '';\r\n          }\r\n\r\n          break;\r\n\r\n        case 'guest':\r\n          if (urlData[key]) {\r\n            state[key] = urlData[key] ? urlData[key] : 0;\r\n          } else {\r\n            state[key] = '';\r\n          }\r\n          break;\r\n\r\n        case 'property':\r\n          state[key] =\r\n            urlData[key] && urlData[key] !== 'null'\r\n              ? urlData[key].split(',')\r\n              : [];\r\n          break;\r\n\r\n        case 'price':\r\n          const defaultPrice = {\r\n            min: 0,\r\n            max: 100,\r\n            defaultMin: 0,\r\n            defaultMax: 100,\r\n          };\r\n          const price = urlData[key] ? urlData[key].split(',') : defaultPrice;\r\n          if (price) {\r\n            let min, max;\r\n            min = price ? Number(price[0]) : 0;\r\n            max = price ? Number(price[1]) : 100;\r\n            if (min > 0 || max < 100) {\r\n              state[key] = {\r\n                min: min,\r\n                max: max,\r\n                defaultMin: 0,\r\n                defaultMax: 100,\r\n              };\r\n            } else {\r\n              state[key] = '';\r\n            }\r\n          }\r\n          break;\r\n\r\n        // case 'radius':\r\n        //   state[key] = Number(urlData[key]);\r\n        //   break;\r\n\r\n        // case 'condition':\r\n        //   state[key] = urlData[key] && urlData[key] == 'true' ? true : false;\r\n        //   break;\r\n\r\n        // case 'isNegotiable':\r\n        //   state[key] = urlData[key] && urlData[key] == 'true' ? true : false;\r\n        //   break;\r\n\r\n        case 'location_lat':\r\n          if (urlData['location_lat']) {\r\n            state['location'] = {};\r\n            state['location']['lat'] = Number(urlData[key]);\r\n          } else {\r\n            state['location'] = null;\r\n          }\r\n          break;\r\n\r\n        case 'location_lng':\r\n          if (urlData[key]) {\r\n            state['location']['lng'] = Number(urlData[key]);\r\n          }\r\n          break;\r\n\r\n        // case 'sorting_field':\r\n        //   if (urlData[key]) {\r\n        //     state['sorting'] = {};\r\n        //     state['sorting']['field'] = urlData[key];\r\n        //   }\r\n        //   break;\r\n\r\n        // case 'sorting_type':\r\n        //   if (urlData[key]) {\r\n        //     state['sorting']['type'] = urlData[key];\r\n        //   }\r\n        //   break;\r\n\r\n        case 'page':\r\n          if (urlData[key]) {\r\n            state['page'] = Number(urlData[key]);\r\n          }\r\n          break;\r\n\r\n        case 'limit':\r\n          if (urlData[key]) {\r\n            state['limit'] = Number(urlData[key]);\r\n          }\r\n          break;\r\n\r\n        default:\r\n          state[key] = urlData[key];\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport function getUrlParam() {\r\n  const query = QueryString.parse(window.location.search);\r\n  return query;\r\n}\r\n"],"sourceRoot":""}